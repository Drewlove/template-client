{"ast":null,"code":"var _jsxFileName = \"/Users/Drew/Projects/template-client/src/CommonFormComponents/FormDeleteButton/FormDeleteButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { API_DELETE } from \"../../Utilities/APImethods/API_DELETE\";\nimport Modal from \"../../Modal/Modal\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormDeleteButton(props) {\n  _s();\n\n  const history = useHistory();\n  const [resDelete, deleteData] = API_DELETE(props.endpointSuffix, props.recipeId);\n  const [modal, setModal] = useState({\n    display: false,\n    text: \"\",\n    type: \"\",\n    redirect: false,\n    redirectSuffix: \"\"\n  });\n  useEffect(() => {\n    const modalDeleteSuccessful = {\n      display: true,\n      type: \"notification\",\n      redirect: true,\n      text: \"Record deleted\",\n      redirectSuffix: props.redirectSuffix\n    };\n    const modalDeleteFail = {\n      display: true,\n      type: \"notification\",\n      redirect: false,\n      text: resDelete.deleteErrorMessage,\n      redirectSuffix: \"\"\n    };\n\n    if (resDelete.recordDeleted === true) {\n      setModal(modalDeleteSuccessful);\n    } else if (resDelete.isDeleteError === true) {\n      setModal(modalDeleteFail);\n    }\n  }, [resDelete, props.redirectSuffix]);\n\n  const handleDeleteClick = e => {\n    e.preventDefault();\n    setModal({ ...modal,\n      display: true,\n      type: \"confirmation\",\n      text: \"Delete this record?\"\n    });\n  };\n\n  const renderModal = () => {\n    return modal.type === \"notification\" ? renderModalNotification() : renderModalConfirmation();\n  };\n\n  const renderModalNotification = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      text: modal.text,\n      handleModalClose: e => handleModalClose(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderModalConfirmation = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      text: modal.text,\n      type: modal.type,\n      handleModalClose: e => handleModalClose(e),\n      handleModalConfirm: e => deleteItem(e),\n      confirmAction: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleModalClose = e => {\n    e.preventDefault();\n    setModal({ ...modal,\n      display: false\n    });\n    return modal.redirect === true ? history.push(`/${props.redirectSuffix}`) : null;\n  };\n\n  const deleteItem = e => {\n    e.preventDefault();\n    deleteData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"delete-button\",\n    children: [modal.display === true ? renderModal() : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button-delete\",\n      className: \"button-save-delete button-save-delete_delete\",\n      value: \"delete\",\n      onClick: handleDeleteClick,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormDeleteButton, \"P4Tms7UlcFSzH1Ajs3WrbTx4CBI=\", false, function () {\n  return [useHistory];\n});\n\n_c = FormDeleteButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDeleteButton\");","map":{"version":3,"sources":["/Users/Drew/Projects/template-client/src/CommonFormComponents/FormDeleteButton/FormDeleteButton.js"],"names":["React","useState","useEffect","API_DELETE","Modal","useHistory","FormDeleteButton","props","history","resDelete","deleteData","endpointSuffix","recipeId","modal","setModal","display","text","type","redirect","redirectSuffix","modalDeleteSuccessful","modalDeleteFail","deleteErrorMessage","recordDeleted","isDeleteError","handleDeleteClick","e","preventDefault","renderModal","renderModalNotification","renderModalConfirmation","handleModalClose","deleteItem","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { API_DELETE } from \"../../Utilities/APImethods/API_DELETE\";\nimport Modal from \"../../Modal/Modal\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function FormDeleteButton(props) {\n  const history = useHistory();\n\n  const [resDelete, deleteData] = API_DELETE(\n    props.endpointSuffix,\n    props.recipeId\n  );\n\n  const [modal, setModal] = useState({\n    display: false,\n    text: \"\",\n    type: \"\",\n    redirect: false,\n    redirectSuffix: \"\",\n  });\n\n  useEffect(() => {\n    const modalDeleteSuccessful = {\n      display: true,\n      type: \"notification\",\n      redirect: true,\n      text: \"Record deleted\",\n      redirectSuffix: props.redirectSuffix,\n    };\n    const modalDeleteFail = {\n      display: true,\n      type: \"notification\",\n      redirect: false,\n      text: resDelete.deleteErrorMessage,\n      redirectSuffix: \"\",\n    };\n\n    if (resDelete.recordDeleted === true) {\n      setModal(modalDeleteSuccessful);\n    } else if (resDelete.isDeleteError === true) {\n      setModal(modalDeleteFail);\n    }\n  }, [resDelete, props.redirectSuffix]);\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    setModal({\n      ...modal,\n      display: true,\n      type: \"confirmation\",\n      text: \"Delete this record?\",\n    });\n  };\n\n  const renderModal = () => {\n    return modal.type === \"notification\"\n      ? renderModalNotification()\n      : renderModalConfirmation();\n  };\n\n  const renderModalNotification = () => {\n    return (\n      <Modal text={modal.text} handleModalClose={(e) => handleModalClose(e)} />\n    );\n  };\n\n  const renderModalConfirmation = () => {\n    return (\n      <Modal\n        text={modal.text}\n        type={modal.type}\n        handleModalClose={(e) => handleModalClose(e)}\n        handleModalConfirm={(e) => deleteItem(e)}\n        confirmAction=\"Delete\"\n      />\n    );\n  };\n\n  const handleModalClose = (e) => {\n    e.preventDefault();\n    setModal({ ...modal, display: false });\n    return modal.redirect === true\n      ? history.push(`/${props.redirectSuffix}`)\n      : null;\n  };\n\n  const deleteItem = (e) => {\n    e.preventDefault();\n    deleteData();\n  };\n\n  return (\n    <div className=\"delete-button\">\n      {modal.display === true ? renderModal() : null}\n      <button\n        id=\"button-delete\"\n        className=\"button-save-delete button-save-delete_delete\"\n        value=\"delete\"\n        onClick={handleDeleteClick}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}