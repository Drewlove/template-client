{"ast":null,"code":"var _jsxFileName = \"/Users/Drew/Projects/template-client/src/NavBar/NavBarDisplayMobile/NavBarDisplayMobile.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport NavBarLinksWrapper from \"../NavBarLinksWrapper/NavBarLinksWrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavBarDisplayMobile() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [openMenu, setMenu] = useState(false);\n\n  const handleClick = () => {\n    setMenu(!openMenu);\n  }; // let location = useLocation();\n  // useEffect(() => {\n  //   setMenu(!openMenu);\n  // }, [location]);\n\n\n  const useOutsideAlerter = ref => {\n    _s();\n\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          setMenuDisplay({\n            display: false\n          });\n        }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  };\n\n  _s(useOutsideAlerter, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n\n  const isMenuOpen = () => {\n    return openMenu ? \"hamburger-open\" : \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"navbar__content navbar__content_display-mobile\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"navbar__hamburger-button\",\n      onClick: () => handleClick(),\n      ref: wrapperRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `navbar__hamburger-dash ${isMenuOpen()}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `navbar__links-container ${isMenuOpen()}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar__links-content\",\n        children: /*#__PURE__*/_jsxDEV(NavBarLinksWrapper, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(NavBarDisplayMobile, \"Tn7ZDBzj8hPSjn9HyI0qxOOBl/Y=\", false, function () {\n  return [useOutsideAlerter];\n});\n\n_c = NavBarDisplayMobile;\nexport default NavBarDisplayMobile;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBarDisplayMobile\");","map":{"version":3,"sources":["/Users/Drew/Projects/template-client/src/NavBar/NavBarDisplayMobile/NavBarDisplayMobile.js"],"names":["React","useState","useEffect","useRef","useLocation","NavBarLinksWrapper","NavBarDisplayMobile","openMenu","setMenu","handleClick","useOutsideAlerter","ref","handleClickOutside","event","current","contains","target","setMenuDisplay","display","document","addEventListener","removeEventListener","wrapperRef","isMenuOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;;;AAEA,SAASC,mBAAT,GAA+B;AAAA;;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBP,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACxBD,IAAAA,OAAO,CAAC,CAACD,QAAF,CAAP;AACD,GAFD,CAH6B,CAO7B;AAEA;AACA;AACA;;;AAEA,QAAMG,iBAAiB,GAAIC,GAAD,IAAS;AAAA;;AACjCT,IAAAA,SAAS,CAAC,MAAM;AACd,eAASU,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,YAAIF,GAAG,CAACG,OAAJ,IAAe,CAACH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtDC,UAAAA,cAAc,CAAC;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAD,CAAd;AACD;AACF;;AACDC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,kBAAvC;AACA,aAAO,MAAM;AACXO,QAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CT,kBAA1C;AACD,OAFD;AAGD,KAVQ,EAUN,CAACD,GAAD,CAVM,CAAT;AAWD,GAZD;;AAb6B,KAavBD,iBAbuB;;AA2B7B,QAAMY,UAAU,GAAGnB,MAAM,CAAC,IAAD,CAAzB;AACAO,EAAAA,iBAAiB,CAACY,UAAD,CAAjB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,WAAOhB,QAAQ,GAAG,gBAAH,GAAsB,EAArC;AACD,GAFD;;AAIA,sBACE;AAAS,IAAA,SAAS,EAAC,gDAAnB;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,0BADZ;AAEE,MAAA,OAAO,EAAE,MAAME,WAAW,EAF5B;AAGE,MAAA,GAAG,EAAEa,UAHP;AAAA,6BAKE;AAAK,QAAA,SAAS,EAAG,0BAAyBC,UAAU,EAAG,EAAvD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAK,MAAA,SAAS,EAAG,2BAA0BA,UAAU,EAAG,EAAxD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;IAvDQjB,mB;UA4BPI,iB;;;KA5BOJ,mB;AAyDT,eAAeA,mBAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport NavBarLinksWrapper from \"../NavBarLinksWrapper/NavBarLinksWrapper\";\n\nfunction NavBarDisplayMobile() {\n  const [openMenu, setMenu] = useState(false);\n\n  const handleClick = () => {\n    setMenu(!openMenu);\n  };\n\n  // let location = useLocation();\n\n  // useEffect(() => {\n  //   setMenu(!openMenu);\n  // }, [location]);\n\n  const useOutsideAlerter = (ref) => {\n    useEffect(() => {\n      function handleClickOutside(event) {\n        if (ref.current && !ref.current.contains(event.target)) {\n          setMenuDisplay({ display: false });\n        }\n      }\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n        document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n    }, [ref]);\n  };\n\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef);\n\n  const isMenuOpen = () => {\n    return openMenu ? \"hamburger-open\" : \"\";\n  };\n\n  return (\n    <section className=\"navbar__content navbar__content_display-mobile\">\n      <button\n        className=\"navbar__hamburger-button\"\n        onClick={() => handleClick()}\n        ref={wrapperRef}\n      >\n        <div className={`navbar__hamburger-dash ${isMenuOpen()}`}>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </button>\n      <div className={`navbar__links-container ${isMenuOpen()}`}>\n        <div className=\"navbar__links-content\">\n          <NavBarLinksWrapper />\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default NavBarDisplayMobile;\n"]},"metadata":{},"sourceType":"module"}