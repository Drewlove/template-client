{"ast":null,"code":"var _jsxFileName = \"/Users/Drew/Projects/template-client/src/NavBar/NavBarDisplayWide/NavBarDisplayWide.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport NavBarLink from \"../NavBarLink/NavBarLink\";\nimport { LINKS } from \"../NavBarLinksConfig\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavBarDisplayWide() {\n  _s();\n\n  let location = useLocation();\n\n  const isCurrentPage = path => {\n    return location.pathname === path ? \"navbar__link_current-page\" : \"\";\n  };\n\n  const renderLinks = () => {\n    return links.map(key => {\n      return /*#__PURE__*/_jsxDEV(NavBarLink, {\n        to: key.to,\n        text: key.text,\n        isCurrentPage: isCurrentPage(key.to)\n      }, key.to, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"navbar__content navbar__content_display-wide\",\n    children: renderLinks()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavBarDisplayWide, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = NavBarDisplayWide;\nexport default NavBarDisplayWide;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBarDisplayWide\");","map":{"version":3,"sources":["/Users/Drew/Projects/template-client/src/NavBar/NavBarDisplayWide/NavBarDisplayWide.js"],"names":["React","NavBarLink","LINKS","useLocation","NavBarDisplayWide","location","isCurrentPage","path","pathname","renderLinks","links","map","key","to","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,iBAAT,GAA6B;AAAA;;AAC3B,MAAIC,QAAQ,GAAGF,WAAW,EAA1B;;AAEA,QAAMG,aAAa,GAAIC,IAAD,IAAU;AAC9B,WAAOF,QAAQ,CAACG,QAAT,KAAsBD,IAAtB,GAA6B,2BAA7B,GAA2D,EAAlE;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxB,WAAOC,KAAK,CAACC,GAAN,CAAWC,GAAD,IAAS;AACxB,0BACE,QAAC,UAAD;AAEE,QAAA,EAAE,EAAEA,GAAG,CAACC,EAFV;AAGE,QAAA,IAAI,EAAED,GAAG,CAACE,IAHZ;AAIE,QAAA,aAAa,EAAER,aAAa,CAACM,GAAG,CAACC,EAAL;AAJ9B,SACOD,GAAG,CAACC,EADX;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATM,CAAP;AAUD,GAXD;;AAaA,sBACE;AAAS,IAAA,SAAS,EAAC,8CAAnB;AAAA,cACGJ,WAAW;AADd;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzBQL,iB;UACQD,W;;;KADRC,iB;AA2BT,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport NavBarLink from \"../NavBarLink/NavBarLink\";\nimport { LINKS } from \"../NavBarLinksConfig\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction NavBarDisplayWide() {\n  let location = useLocation();\n\n  const isCurrentPage = (path) => {\n    return location.pathname === path ? \"navbar__link_current-page\" : \"\";\n  };\n\n  const renderLinks = () => {\n    return links.map((key) => {\n      return (\n        <NavBarLink\n          key={key.to}\n          to={key.to}\n          text={key.text}\n          isCurrentPage={isCurrentPage(key.to)}\n        />\n      );\n    });\n  };\n\n  return (\n    <section className=\"navbar__content navbar__content_display-wide\">\n      {renderLinks()}\n    </section>\n  );\n}\n\nexport default NavBarDisplayWide;\n"]},"metadata":{},"sourceType":"module"}